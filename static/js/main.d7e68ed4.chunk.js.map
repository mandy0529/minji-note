{"version":3,"sources":["Components/Header.js","Routes/UseTitle.js","Routes/UseTabs.js","Routes/useScroll.js","Routes/UseRef.js","Routes/UsePreventLeave.js","Routes/UseNotification.js","Routes/UseNetwork.js","Routes/UseInput.js","Routes/UseFullScreen.js","Routes/UseFadeIn.js","Routes/UseEffect.js","Routes/UseConfirm.js","Routes/UseClick.js","Routes/UseBeforeLeave.js","Routes/UseAxios.js","Components/Router.js","App.js","index.js"],"names":["Ul","styled","ul","Li","li","Alink","Link","Header","to","Container","div","Pre","pre","Div","UseTitle","titleUpdate","defaultTitle","useState","title","setTitle","useEffect","document","querySelector","innerText","UseforTitle","onClick","tabs","date","todo","UseTabs","initialTab","allTabs","currentIndex","setCurrentIndex","Array","isArray","current","change","UseForTabs","map","tab","index","UseScroll","x","y","state","setState","onScroll","window","scrollX","scrollY","addEventListener","removeEventListener","UseForScroll","style","position","color","backgroundColor","UseRef","minji","useRef","setTimeout","focus","ref","placeholder","Button","button","UsePreventEvent","listner","event","preventDefault","returnValue","enable","disable","UseForPreventEvent","UseNotification","noti","options","notification","permission","Notification","requestPermission","then","UseForNotification","body","Online","h1","UseNetwork","onLine","onChange","navigator","status","setStatus","handleChange","UseForNetwork","console","log","UseInput","defaultValue","controller","value","setValue","handleSubmit","target","update","UseForInput","includes","UseFullscreen","onFull","checkFunction","isFunction","element","fullscreenMode","fullscreenElement","exitFullscreen","children","requestFullscreen","UseForFullscreen","isFull","src","width","height","Icon","UseForFadeIn","duration","delay","transition","opacity","UseFadeIn","ele","ele2","Number","UseEffect","number","setNumber","deletion","rejection","UseConfirm","confirmDeleteMessage","message","onConfirm","onCancel","confirm","UseForConfirm","UseClick","btn","undefined","UseForClick","UseBeforeLeave","onBefore","handle","clientY","UseForBeforeLeave","UseAxios","axiosInstance","defaultAxios","loading","error","data","trigger","setTrigger","refetch","Date","now","catch","url","useForAxios","JSON","stringify","Router","path","component","UsePreventLeave","UseFullScreen","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d7e68ed4.chunk.js","sourcesContent":["import {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Ul = styled.ul`\n  all: unset;\n  display: flex;\n  overflow-x: auto;\n  padding: 10px;\n  background-color: black;\n  color: white;\n`;\nconst Li = styled.li`\n  all: unset;\n  margin: 0 10px;\n  font-size: 20px;\n  font-weight: bold;\n  padding: 5px;\n  border: 3px solid transparent;\n  transition: all 300ms ease-in-out;\n  border-radius: 10px;\n  &:hover {\n    background-color: white;\n    border: 3px solid white;\n  }\n`;\nconst Alink = styled(Link)`\n  text-decoration: none;\n  color: white;\n  outline: none;\n  background-color: transparent;\n  list-style: none;\n  cursor: pointer;\n  &:hover {\n    color: black;\n  }\n`;\n\nfunction Header() {\n  return (\n    <Ul>\n      <Li>\n        <Alink to=\"/input\">useInput</Alink>\n      </Li>\n      <Li>\n        <Alink to=\"/tabs\">useTabs</Alink>\n      </Li>\n      <Li>\n        <Alink to=\"/effect\">useEffect</Alink>\n      </Li>\n      <Li>\n        <Alink to=\"/title\">useTitle</Alink>\n      </Li>\n      <Li>\n        <Alink to=\"/scroll\">useScroll</Alink>\n      </Li>\n      <Li>\n        <Alink to=\"/ref\">useRef</Alink>\n      </Li>\n      <Li>\n        <Alink to=\"/prevent\">usePreventLeave</Alink>\n      </Li>\n      <Li>\n        <Alink to=\"/notification\">useNotification</Alink>\n      </Li>\n      <Li>\n        <Alink to=\"/network\">useNetwork</Alink>\n      </Li>\n      <Li>\n        <Alink to=\"/full/screen\">useFullScreen</Alink>\n      </Li>\n      <Li>\n        <Alink to=\"/fadein\">useFaceIn</Alink>\n      </Li>\n      <Li>\n        <Alink to=\"/confirm\">useConfirm</Alink>\n      </Li>\n      <Li>\n        <Alink to=\"/click\">useClick</Alink>\n      </Li>\n      <Li>\n        <Alink to=\"/before\">useBeforeLeave</Alink>\n      </Li>\n      <Li>\n        <Alink to=\"/network\">useNetwork</Alink>\n      </Li>\n      <Li>\n        <Alink to=\"/axios\">useAxios</Alink>\n      </Li>\n    </Ul>\n  );\n}\n\nexport default Header;\n","import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Pre = styled.pre`\n  padding: 20px;\n  border: 5px solid black;\n  border-top: 40px solid black;\n  border-radius: 10px;\n  font-size: 15px;\n  margin: 20px;\n`;\n\nconst Div = styled.div`\n  margin: 100px;\n`;\n\nconst UseforTitle = (defaultTitle) => {\n  const [title, setTitle] = useState(defaultTitle);\n  const htmlTitleUpdate = () => {\n    const titleHtml = document.querySelector('title');\n    titleHtml.innerText = title;\n  };\n  useEffect(htmlTitleUpdate, [title]);\n  return setTitle;\n};\n\nconst UseTitle = () => {\n  const titleUpdate = UseforTitle('...loading');\n  const handleClick = () => {\n    titleUpdate('changed!');\n  };\n  return (\n    <Container>\n      <Div>\n        <h1>4. 버튼 누르면 head의 title이 changed로 바뀌게 하기</h1>\n        <button onClick={handleClick}>change</button>\n      </Div>\n      <Pre>\n        {`\n        import React, {useState} from 'react';\n        import styled from 'styled-components';\n        \n        const useforTitle = (defaultTitle) => {\n          const [title, setTitle] = useState(defaultTitle);\n          const htmlTitleUpdate = () => {\n            const titleHtml = document.querySelector('title');\n            titleHtml.innerText = title;\n          };\n          useEffect(htmlTitleUpdate, [title]);\n          return setTitle;\n        };\n        \n        const UseTitle = () => {\n          const titleUpdate = useforTitle('...loading');\n          const handleClick = () => {\n            titleUpdate('changed!');\n          };\n          return (\n            <Container>\n              <Div >\n              <h1>hi</h1>\n                <button onClick={handleClick}>change</button>\n              </Div>\n            </Container>\n          );\n        };\n      \n        export default UseTitle;\n        `}\n      </Pre>\n    </Container>\n  );\n};\n\nexport default UseTitle;\n","import React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst Pre = styled.pre`\n  padding: 20px;\n  border: 5px solid black;\n  border-top: 40px solid black;\n  border-radius: 10px;\n  font-size: 15px;\n  margin: 20px;\n`;\n\nconst Div = styled.div`\n  margin: 100px;\n`;\n\nconst tabs = [\n  {\n    date: 'weekday',\n    todo: '👩🏻‍💻 working, studying, working out',\n  },\n  {\n    date: 'weekend',\n    todo: '🏄‍♂️ to go anywhere I wanna',\n  },\n];\n\nconst UseForTabs = (initialTab, allTabs) => {\n  const [currentIndex, setCurrentIndex] = useState(initialTab);\n  if (!allTabs || !Array.isArray(allTabs)) {\n    return;\n  }\n\n  return {current: allTabs[currentIndex], change: setCurrentIndex};\n};\n\nconst UseTabs = () => {\n  const {current, change} = UseForTabs(0, tabs);\n  return (\n    <Container>\n      <Div>\n        <h1>2. use tabs = 배열로 담은 값 버튼누르면 각각 나오게하기</h1>\n        <h2>what are you doing this day?</h2>\n        <div>\n          {tabs.map((tab, index) => (\n            <button onClick={() => change(index)}>{tab.date}</button>\n          ))}\n        </div>\n        <h2> {current.todo}</h2>\n      </Div>\n      <Pre>\n        {`import React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\n\nconst tabs = [\n  {\n    date: 'weekday',\n    todo: '👩🏻‍💻 working, studying, working out',\n  },\n  {\n    date: 'weekend',\n    todo: '🏄‍♂️ to go anywhere I wanna',\n  },\n];\n\nconst UseForTabs = (initialTab, allTabs) => {\n  const [currentIndex, setCurrentIndex] = useState(initialTab);\n  if (!allTabs || !Array.isArray(allTabs)) {\n    return;\n  }\n\n  return {current: allTabs[currentIndex], change: setCurrentIndex};\n};\n\nconst UseTabs = () => {\n  const {current, change} = UseForTabs(0, tabs);\n  return (\n    <>\n      <h1>what are you doing this day?</h1>\n      <div>\n        {tabs.map((tab, index) => (\n          <button onClick={() => change(index)}>{tab.date}</button>\n        ))}\n      </div>\n      <h2> {current.todo}</h2>\n    </>\n  );\n};\n\nexport default UseTabs;\n`}\n      </Pre>\n    </Container>\n  );\n};\n\nexport default UseTabs;\n","import {useEffect, useState} from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 100px;\n  height: 1000vh;\n  width: 1000vh;\n`;\n\nconst Pre = styled.pre`\n  padding: 20px;\n  border: 5px solid black;\n  border-top: 40px solid black;\n  border-radius: 10px;\n  font-size: 15px;\n  margin: 20px;\n  position: fixed;\n  right: 0;\n`;\n\nconst Div = styled.div`\n  margin: 100px;\n`;\n\nconst UseForScroll = () => {\n  const [state, setState] = useState({\n    x: 0,\n    y: 0,\n  });\n  const onScroll = () => {\n    setState({x: window.scrollX, y: window.scrollY});\n  };\n  useEffect(() => {\n    window.addEventListener('scroll', onScroll);\n    return () => window.removeEventListener('scroll', onScroll);\n  });\n  return state;\n};\n\nconst UseScroll = () => {\n  const {x, y} = UseForScroll();\n  return (\n    <Container>\n      <Div>\n        <h2\n          style={{\n            position: 'fixed',\n            color: y > 500 ? 'red' : 'blue',\n            backgroundColor: x > 500 ? 'teal' : 'gold',\n          }}\n        >\n          5. 스크롤하면 어떻게 바뀌는지 확인하기!\n        </h2>\n      </Div>\n      <Pre>{`\n      import {useEffect, useState} from 'react';\n      import styled from 'styled-components';\n      \n      const UseForScroll = () => {\n        const [state, setState] = useState({\n          x: 0,\n          y: 0,\n        });\n        const onScroll = () => {\n          setState({x: window.scrollX, y: window.scrollY});\n        };\n        useEffect(() => {\n          window.addEventListener('scroll', onScroll);\n          return () => window.removeEventListener('scroll', onScroll);\n        });\n        return state;\n      };\n      \n      const UseScroll = () => {\n        const {x, y} = UseForScroll();\n        return (\n          <Container>\n            <Div>\n              <h1\n                style={{\n                  position: 'fixed',\n                  color: y > 500 ? 'red' : 'blue',\n                  backgroundColor: x > 500 ? 'teal' : 'gold',\n                }}\n              >\n                minji\n              </h1>\n            </Div>\n          </Container>\n        );\n      };\n      \n      export default UseScroll;\n      \n      `}</Pre>\n    </Container>\n  );\n};\n\nexport default UseScroll;\n","import React, {useEffect, useRef} from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Pre = styled.pre`\n  padding: 20px;\n  border: 5px solid black;\n  border-top: 40px solid black;\n  border-radius: 10px;\n  font-size: 15px;\n  margin: 20px;\n`;\n\nconst Div = styled.div`\n  margin: 100px;\n`;\n\nconst UseRef = () => {\n  const minji = useRef('');\n  useEffect(() => {\n    setTimeout(() => {\n      minji.current && minji.current.focus();\n    }, 3000);\n  });\n\n  return (\n    <Container>\n      <Div>\n        <h1>6. 3초 뒤 input focus 해주기 ( use ref ) </h1>\n        <input ref={minji} placeholder=\"write your name\"></input>\n      </Div>\n      <Pre>\n        {`import React, {useState, useEffect, useRef} from 'react';\nimport styled from 'styled-components';\n\nconst UseRef = () => {\n  const potato = useRef('');\n  const {current} = potato;\n  useEffect(() => {\n    setTimeout(() => {\n      current.focus();\n    }, 3000);\n  });\n\n  return (\n    <Container>\n      <Div>\n      <h1>hi</h1>\n        <input ref={potato} placeholder=\"write your name\"></input>\n      </Div>\n    </Container>\n  );\n};\n\nexport default UseRef;\n`}\n      </Pre>\n    </Container>\n  );\n};\n\nexport default UseRef;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 100px;\n`;\nconst Button = styled.button`\n  all: unset;\n  width: 120px;\n  height: 30px;\n  border: 3px solid black;\n  text-align: center;\n  transition: all 300ms ease-in-out;\n  font-size: 20px;\n  font-weight: bold;\n  border-radius: 10px;\n  &:hover {\n    background-color: black;\n    color: white;\n  }\n`;\nconst Pre = styled.pre`\n  padding: 20px;\n  border: 5px solid black;\n  border-top: 40px solid black;\n  border-radius: 10px;\n  font-size: 15px;\n  margin: 20px;\n`;\n\nconst Div = styled.div`\n  margin: 100px;\n`;\nconst UseForPreventEvent = () => {\n  const listner = (event) => {\n    event.preventDefault();\n    event.returnValue = '';\n  };\n  const enable = () => window.addEventListener('beforeunload', listner);\n  const disable = () => window.removeEventListener('beforeunload', listner);\n  return {enable, disable};\n};\n\nconst UsePreventEvent = () => {\n  const {enable, disable} = UseForPreventEvent();\n  return (\n    <Container>\n      <Div>\n        <h1>\n          7. 페이지 나갈때 각 버튼 누르고 protected 이면 알림창 뜨고,\n          unprotected 이면 알림창 X\n        </h1>\n        <Button onClick={enable}>protected</Button>\n        <Button onClick={disable}>unprotected</Button>\n      </Div>\n      <Pre>\n        {`\n        import styled from 'styled-components';\n         \n        const UseForPreventEvent = () => {\n          const listner = (event) => {\n            event.preventDefault();\n            event.returnValue = '';\n          };\n          const enable = () => window.addEventListener('beforeunload', listner);\n          const disable = () => window.removeEventListener('beforeunload', listner);\n          return {enable, disable};\n        };\n        \n        const UsePreventEvent = () => {\n          const {enable, disable} = UseForPreventEvent();\n          return (\n            <Container>\n              <Div>\n              <Button onClick={enable}>protected</Button>\n                <Button onClick={disable}>unprotected</Button>\n              </Div>\n            </Container>\n          );\n        };\n        \n        export default UsePreventEvent;\n        `}\n      </Pre>\n    </Container>\n  );\n};\n\nexport default UsePreventEvent;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin: 100px;\n`;\n\nconst Pre = styled.pre`\n  padding: 20px;\n  border: 5px solid black;\n  border-top: 40px solid black;\n  border-radius: 10px;\n  font-size: 15px;\n  margin: 20px;\n`;\n\nconst Div = styled.div`\n  margin: 100px;\n`;\n\nconst UseForNotification = (title, options) => {\n  if (!'notification' in window) {\n    return;\n  }\n  const notification = () => {\n    if (notification.permission !== 'granted') {\n      Notification.requestPermission().then((permission) => {\n        if (permission === 'granted') {\n          new Notification(title, options);\n        } else {\n          return;\n        }\n      });\n    } else {\n      new Notification(title, options);\n    }\n  };\n  return notification;\n};\n\nconst UseNotification = () => {\n  const noti = UseForNotification(\n    'today what we/re gonna have for lunch&dinner?',\n    {body: '떡볶이!!!!! & 치킨 ? or 튀김'}\n  );\n  return (\n    <Container>\n      <Div>\n        <h1>8. 밥 버튼 누르면 크롬알림창 오는거 확인</h1>\n        <button onClick={noti}>밥</button>\n      </Div>\n      <Pre>\n        {`\n        import styled from 'styled-components';\n        \n        const UseForNotification = (title, options) => {\n          if (!'notification' in window) {\n            return;\n          }\n          const notification = () => {\n            if (notification.permission !== 'granted') {\n              Notification.requestPermission().then((permission) => {\n                if (permission === 'granted') {\n                  new Notification(title, options);\n                } else {\n                  return;\n                }\n              });\n            } else {\n              new Notification(title, options);\n            }\n          };\n          return notification;\n        };\n        \n        const UseNotification = () => {\n          const noti = UseForNotification(\n            'today what we/re gonna have for lunch&dinner?',\n            {body: '떡볶이!!!!! & 치킨 ? or 튀김'}\n          );\n          return (\n            <Container>\n              <Div >\n                <button onClick={noti}>밥</button>\n              </Div>\n            </Container>\n          );\n        };\n        \n        export default UseNotification;\n        `}\n      </Pre>\n    </Container>\n  );\n};\n\nexport default UseNotification;\n","import {useEffect, useState} from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-top: 100px;\n`;\n\nconst Pre = styled.pre`\n  padding: 20px;\n  border: 5px solid black;\n  border-top: 40px solid black;\n  border-radius: 10px;\n  font-size: 15px;\n  margin: 20px;\n`;\n\nconst Div = styled.div`\n  margin: 100px;\n`;\nconst Online = styled.h1`\n  color: teal;\n`;\n\nconst UseForNetwork = (onChange) => {\n  const [status, setStatus] = useState(navigator.onLine);\n  const handleChange = () => {\n    if (typeof onChange === 'function') {\n      onChange(navigator.onLine);\n    }\n    setStatus(navigator.onLine);\n  };\n  useEffect(() => {\n    window.addEventListener('online', handleChange);\n    window.addEventListener('offline', handleChange);\n\n    return () => {\n      window.removeEventListener('online', handleChange);\n      window.removeEventListener('offline', handleChange);\n    };\n  }, []);\n  return status;\n};\n\nconst UseNetwork = () => {\n  const onOffLineConsole = (onLine) => {\n    console.log(onLine ? '✅ we went online' : '❌ we are on offline');\n  };\n  const onLine = UseForNetwork(onOffLineConsole);\n  return (\n    <Container>\n      <Div>\n        <h1>15. network offline, online 일때 상태 확인</h1>\n        <Online>{onLine ? 'online' : 'offline'}</Online>\n      </Div>\n      <Pre>\n        {`\n        import {useEffect, useState} from 'react';\n        import styled from 'styled-components';\n        \n        const UseForNetwork = (onChange) => {\n          const [status, setStatus] = useState(navigator.onLine);\n          const handleChange = () => {\n            if (typeof onChange === 'function') {\n              onChange(navigator.onLine);\n            }\n            setStatus(navigator.onLine);\n          };\n          useEffect(() => {\n            window.addEventListener('online', handleChange);\n            window.addEventListener('offline', handleChange);\n        \n            return () => {\n              window.removeEventListener('online', handleChange);\n              window.removeEventListener('offline', handleChange);\n            };\n          }, []);\n          return status;\n        };\n        \n        const UseNetwork = () => {\n          const onOffLineConsole = (onLine) => {\n            console.log(onLine ? '✅ we went online' : '❌ we are on offline');\n          };\n          const onLine = UseForNetwork(onOffLineConsole);\n          return (\n            <Container>\n              <Div>\n                <h1>{onLine ? 'online' : 'offline'}</h1>\n              </Div>\n            </Container>\n          );\n        };\n        \n        export default UseNetwork;\n        `}\n      </Pre>\n    </Container>\n  );\n};\n\nexport default UseNetwork;\n","import React, {useState} from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst Pre = styled.pre`\n  padding: 20px;\n  border: 5px solid black;\n  border-top: 40px solid black;\n  border-radius: 10px;\n  font-size: 15px;\n  margin: 20px;\n`;\n\nconst Div = styled.div`\n  margin: 100px;\n`;\n\nconst UseForInput = (defaultValue, controller) => {\n  const [value, setValue] = useState(defaultValue);\n  const handleSubmit = (event) => {\n    const {value} = event.target;\n    let update = null;\n    if (typeof controller === 'function') {\n      update = controller(value);\n    }\n    if (update) {\n      setValue(value);\n    }\n  };\n  return {value, handleSubmit};\n};\nconst UseInput = () => {\n  const controller = (value) => !value.includes('@');\n  const {value, handleSubmit} = UseForInput('ms.', controller);\n  return (\n    <Container>\n      <Div>\n        <h1>1. @ 안써지는 input 확인하기</h1>\n        <input\n          value={value}\n          onChange={handleSubmit}\n          placeholder=\"write your name\"\n        ></input>\n      </Div>\n      <Pre>\n        {`import React, {useState} from 'react';\nimport styled from 'styled-components';\n\nconst UseForInput = (defaultValue, controller) => {\n  const [value, setValue] = useState(defaultValue);\n  const handleSubmit = (event) => {\n    const {value} = event.target;\n    let update = null;\n    if (typeof controller === 'function') {\n      update = controller(value);\n    }\n    if (update) {\n      setValue(value);\n    }\n  };\n  \n  return {value, handleSubmit};\n};\n\nconst UseInput = () => {\n  const controller = (value) => !value.includes('@');\n  const {value, handleSubmit} = UseForInput('ms.', controller);\n\n  return (\n    <Container>\n      <Div>\n        <h1>use input</h1>\n        <input\n          value={value}\n          onChange={handleSubmit}\n          placeholder=\"write your name\"\n        ></input>\n      </Div>\n    </Container>\n  );\n};\n\nexport default UseInput;\n`}\n      </Pre>\n    </Container>\n  );\n};\n\nexport default UseInput;\n","import {useRef} from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-top: 100px;\n`;\n\nconst Pre = styled.pre`\n  padding: 20px;\n  border: 5px solid black;\n  border-top: 40px solid black;\n  border-radius: 10px;\n  font-size: 15px;\n  margin: 20px;\n`;\n\nconst Div = styled.div`\n  margin: 100px;\n`;\n\nconst UseForFullscreen = (onFull) => {\n  const checkFunction = (isFunction) => {\n    if (typeof onFull === 'function') {\n      onFull(isFunction);\n    }\n  };\n  const element = useRef();\n  const fullscreenMode = () => {\n    const {current} = element;\n    const fullScreen = document.fullscreenElement;\n    if (fullScreen) {\n      document.exitFullscreen();\n      current.children[1].innerText = 'full';\n      checkFunction(false);\n    } else {\n      current.requestFullscreen();\n      current.children[1].innerText = 'exit';\n      checkFunction(true);\n    }\n  };\n  return {element, fullscreenMode};\n};\n\nconst UseFullscreen = () => {\n  const onFull = (isFull) => {\n    console.log(isFull ? \"i'm full!\" : \"i'm small\");\n  };\n  const {element, fullscreenMode} = UseForFullscreen(onFull);\n\n  return (\n    <Container>\n      <Div>\n        <div ref={element}>\n          <h1>10. 전체화면, 스몰화면 해보기</h1>\n          <img src=\"dog.jpeg\" width=\"500px\" height=\"700px\"></img>\n          <button onClick={fullscreenMode}>full</button>\n        </div>\n      </Div>\n      <Pre>\n        {`\n        import {useRef} from 'react';\n        import styled from 'styled-components';\n        \n        const UseForFullscreen = (onFull) => {\n          const checkFunction = (isFunction) => {\n            if (typeof onFull === 'function') {\n              onFull(isFunction);\n            }\n          };\n          const element = useRef();\n          const fullscreenMode = () => {\n            const {current} = element;\n            const fullScreen = document.fullscreenElement;\n            if (fullScreen) {\n              document.exitFullscreen();\n              current.children[1].innerText = 'full';\n              checkFunction(false);\n            } else {\n              current.requestFullscreen();\n              current.children[1].innerText = 'exit';\n              checkFunction(true);\n            }\n          };\n          return {element, fullscreenMode};\n        };\n        \n        const UseFullscreen = () => {\n          const onFull = (isFull) => {\n            console.log(isFull ? \"i'm full!\" : \"i'm small\");\n          };\n          const {element, fullscreenMode} = UseForFullscreen(onFull);\n        \n          return (\n            <Container>\n              <Div ref={element}>\n                <img src=\"dog.jpeg\" width=\"500px\" height=\"700px\"></img>\n                <button onClick={fullscreenMode}>full</button>\n              </Div>\n            </Container>\n          );\n        };\n        \n        export default UseFullscreen;`}\n      </Pre>\n    </Container>\n  );\n};\n\nexport default UseFullscreen;\n","import {useEffect, useRef} from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-top: 100px;\n`;\n\nconst Pre = styled.pre`\n  padding: 20px;\n  border: 5px solid black;\n  border-top: 40px solid black;\n  border-radius: 10px;\n  font-size: 15px;\n  margin: 20px;\n`;\n\nconst Div = styled.div`\n  margin: 100px;\n`;\nconst Icon = styled.h1`\n  color: teal;\n`;\nconst UseForFadeIn = (duration = 0, delay = 0) => {\n  const element = useRef();\n  useEffect(() => {\n    if (element.current) {\n      const {current} = element;\n      current.style.transition = `all ${duration}s ease-out ${delay}s`;\n      current.style.opacity = 1;\n    }\n  });\n  if (typeof duration !== 'number' || typeof delay !== 'number') {\n    return;\n  }\n  return {ref: element, style: {opacity: 0}};\n};\n\nconst UseFadeIn = () => {\n  const ele = UseForFadeIn(1, 3);\n  const ele2 = UseForFadeIn(3, 6);\n  return (\n    <Container>\n      <Div>\n        <h1>11. 몇초후 fade in 일어나는거 확인</h1>\n        <Icon {...ele}>minji</Icon>\n        <Icon {...ele2}>hello</Icon>\n      </Div>\n      <Pre>\n        {`\n        import {useEffect,, useRef} from 'react';\n        import styled from 'styled-components';\n        \n        const UseForFadeIn = (duration = 0, delay = 0) => {\n          const element = useRef();\n          useEffect(() => {\n            if (element.current) {\n              const {current} = element;\n              current.style.transition = 'all {duration}s ease-out {delay}s';\n              current.style.opacity = 1;\n            }\n          });\n          if (typeof duration !== 'number' || typeof delay !== 'number') {\n            return;\n          }\n          return {ref: element, style: {opacity: 0}};\n        };\n        \n        const UseFadeIn= () => {\n          const ele = UseForFadeIn(1, 3);\n          const ele2 = UseForFadeIn(3, 6);\n          return (\n            <Container>\n              <Div>\n              <h1 {...ele}>minji</h1>\n                <h2 {...ele2}>hello</h2>\n              </Div>\n            </Container>\n          );\n        };\n        \n        export default UseFadeIn; \n        `}\n      </Pre>\n    </Container>\n  );\n};\n\nexport default UseFadeIn;\n","import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Pre = styled.pre`\n  padding: 20px;\n  border: 5px solid black;\n  border-top: 40px solid black;\n  border-radius: 10px;\n  font-size: 15px;\n  margin: 20px;\n`;\n\nconst Div = styled.div`\n  margin: 100px;\n`;\n\nconst Number = styled.h1`\n  color: teal;\n  border: 10px;\n  font-weight: bold;\n`;\n\nconst UseEffect = () => {\n  const sayHello = () => {\n    console.log('hello, minji!');\n  };\n  const [number, setNumber] = useState(0);\n\n  const handlePlus = () => {\n    setNumber(number + 1);\n  };\n  const handleMinus = () => {\n    setNumber(number - 1);\n  };\n  useEffect(sayHello, [number]);\n  return (\n    <Container>\n      <Div>\n        <h1>3. 1씩 더하고 빼기</h1>\n        <Number>{number < 0 ? 0 : number}</Number>\n\n        <button onClick={handlePlus}>+</button>\n        <button onClick={handleMinus}>-</button>\n      </Div>\n      <Pre>\n        {`import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\n\nconst UseEffect = () => {\n  const sayHello = () => {\n    console.log('hello, minji!');\n  };\n  const [number, setNumber] = useState(0);\n\n  const handlePlus = () => {\n    setNumber(number + 1);\n  };\n  const handleMinus = () => {\n    setNumber(number - 1);\n  };\n  useEffect(sayHello, [number]);\n  return (\n    <Container>\n      <Div>\n      <h1>{number < 0 ? 0 : number}</h1>\n      \n        <button onClick={handlePlus}>+</button>\n        <button onClick={handleMinus}>-</button>\n      </Div>\n    </Container>\n  );\n};\n\nexport default Minji;\n\nexport default UseEffect;\n`}\n      </Pre>\n    </Container>\n  );\n};\n\nexport default UseEffect;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst Pre = styled.pre`\n  padding: 20px;\n  border: 5px solid black;\n  border-top: 40px solid black;\n  border-radius: 10px;\n  font-size: 15px;\n  margin: 20px;\n`;\n\nconst Div = styled.div`\n  margin: 100px;\n`;\n\nconst UseForConfirm = (message = '', onConfirm, onCancel) => {\n  if (!onConfirm || typeof onConfirm !== 'function') {\n    return;\n  }\n  if (!onCancel || typeof onCancel !== 'function') {\n    return;\n  }\n  const confirmAction = () => {\n    if (window.confirm(message)) {\n      onConfirm();\n    } else {\n      onCancel();\n    }\n  };\n\n  return confirmAction;\n};\n\nconst deletion = () => {\n  console.log('deleting all things...');\n  return deletion;\n};\nconst rejection = () => {\n  console.log(\"rejected. din't change anything\");\n  return rejection;\n};\n\nconst UseConfirm = () => {\n  const confirmDeleteMessage = UseForConfirm(\n    'are you sure?',\n    deletion,\n    rejection\n  );\n  return (\n    <Container>\n      <Div>\n        <h1>12. 버튼 누르면 뜨는 알림창 확인하기! </h1>\n        <button onClick={confirmDeleteMessage}>delete all things</button>\n      </Div>\n      <Pre>\n        {`\nimport styled from 'styled-components';\n\nconst UseForConfirm = (message = '', onConfirm, onCancel) => {\n  if (!onConfirm || typeof onConfirm !== 'function') {\n    return;\n  }\n  if (!onCancel || typeof onCancel !== 'function') {\n    return;\n  }\n  const confirmAction = () => {\n    if (window.confirm(message)) {\n      onConfirm();\n    } else {\n      onCancel();\n    }\n  };\n\n  return confirmAction;\n};\n\nconst deletion = () => {\n  console.log('deleting all things...');\n  return deletion;\n};\nconst rejection = () => {\n  console.log(\"rejected. din't change anything\");\n  return rejection;\n};\n\nconst UseConfirm = () => {\n  const confirmDeleteMessage = UseForConfirm('are you sure?', deletion, rejection);\n  return (\n    <Container>\n      <Div>\n      <h1>hi i am minji, </h1>\n        <button onClick={confirmDeleteMessage}>delete all things</button>\n      </Div>\n    </Container>\n  );\n};\n\nexport default UseConfirm;`}\n      </Pre>\n    </Container>\n  );\n};\n\nexport default UseConfirm;\n","import {useEffect, useRef} from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst Pre = styled.pre`\n  padding: 20px;\n  border: 5px solid black;\n  border-top: 40px solid black;\n  border-radius: 10px;\n  font-size: 15px;\n  margin: 20px;\n`;\n\nconst Div = styled.div`\n  margin: 100px;\n`;\n\nconst UseForClick = (onClick) => {\n  const btn = useRef();\n  useEffect(() => {\n    if (typeof onClick !== 'function') {\n      return;\n    }\n    if (btn.current) {\n      btn.current.addEventListener('click', onClick);\n    }\n    return () => {\n      if (btn.current) {\n        btn.current.removeEventListener('click', onClick);\n      }\n    };\n  }, []);\n  return typeof onClick === 'function' ? btn : undefined;\n};\n\nconst UseClick = () => {\n  const 무야호 = () => {\n    console.log('무야호');\n  };\n  const title = UseForClick(무야호);\n  return (\n    <Container>\n      <Div>\n        <h1>13. 클릭했을때 무야호 출력하는 함수 실행!</h1>\n        <button ref={title}>click</button>\n      </Div>\n      <Pre>\n        {`import {useEffect, useState, useRef} from 'react';\n            import styled from 'styled-components';\n\nconst UseForClick = (onClick) => {\n  const btn = useRef();\n  useEffect(() => {\n    if (typeof onClick !== 'function') {\n      return;\n    }\n    if (btn.current) {\n      btn.current.addEventListener('click', onClick);\n    }\n\n    return () => {\n      if (btn.current) {\n        btn.current.removeEventListener('click', onClick);\n      }\n    };\n  }, []);\n\n  return typeof onClick === 'function' ? btn : undefined;\n};\n\nconst UseClick = () => {\n  const 무야호 = () => {\n    console.log('무야호');\n  };\n  const title = UseForClick(무야호);\n\n  return (\n    <Container>\n      <Div>\n      <h1>hi</h1>\n        <button ref={title}>click</button>\n      </Div>\n    </Container>\n  );\n};\n\nexport default UseClick;`}\n      </Pre>\n    </Container>\n  );\n};\n\nexport default UseClick;\n","import {useEffect} from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-top: 100px;\n`;\nconst Pre = styled.pre`\n  padding: 20px;\n  border: 5px solid black;\n  border-top: 40px solid black;\n  border-radius: 10px;\n  font-size: 15px;\n  margin: 20px;\n`;\n\nconst Div = styled.div`\n  margin: 100px;\n`;\nconst Icon = styled.h1`\n  color: teal;\n`;\nconst UseForBeforeLeave = (onBefore) => {\n  const handle = (event) => {\n    const {clientY} = event;\n    if (clientY < 0) {\n      onBefore();\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('mouseleave', handle);\n    return () => document.removeEventListener('mouseleave', handle);\n  }, []);\n  if (typeof onBefore !== 'function') {\n    return;\n  }\n};\n\nconst UseBeforeLeave = () => {\n  const messageLeave = () => {\n    console.log('you are left');\n  };\n  UseForBeforeLeave(messageLeave);\n  return (\n    <Container>\n      <Div>\n        <h1>\n          14. 페이지 떠나려고 윗창으로 마우스 커서 갔을때 콘솔에 출력되는지 확인\n        </h1>\n        <Icon>minji</Icon>\n      </Div>\n      <Pre>{`\n      import {useEffect} from 'react';\n      import styled from 'styled-components';\n      \n      const UseForBeforeLeave = (onBefore) => {\n        const handle = (event) => {\n          const {clientY} = event;\n          if (clientY < 0) {\n            onBefore();\n          }\n        };\n        useEffect(() => {\n          document.addEventListener('mouseleave', handle);\n          return () => document.removeEventListener('mouseleave', handle);\n        }, []);\n        if (typeof onBefore !== 'function') {\n          return;\n        }\n      };\n      \n      const UseBeforeLeave = () => {\n        const messageLeave = () => {\n          console.log('you are left');\n        };\n        UseForBeforeLeave(messageLeave);\n        return (\n          <Container>\n            <Div>\n            <h1>minji</h1>\n      \n            </Div>\n          </Container>\n        );\n      };\n      \n      export default UseBeforeLeave;\n      `}</Pre>\n    </Container>\n  );\n};\n\nexport default UseBeforeLeave;\n","import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport defaultAxios from 'axios';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst Div = styled.div`\n  margin: 100px;\n`;\n\nconst Pre = styled.pre`\n  padding: 20px;\n  border: 5px solid black;\n  border-top: 40px solid black;\n  border-radius: 10px;\n  font-size: 15px;\n  margin: 20px;\n`;\nconst Icon = styled.h1`\n  color: tomato;\n`;\nconst useForAxios = (options, axiosInstance = defaultAxios) => {\n  const [state, setState] = useState({\n    loading: true,\n    error: null,\n    data: null,\n  });\n  const [trigger, setTrigger] = useState(0);\n  const refetch = () => {\n    setState({\n      ...state,\n      loading: true,\n    });\n    setTrigger(Date.now());\n  };\n  useEffect(() => {\n    axiosInstance(options)\n      .then((data) => {\n        setState({\n          ...state,\n          loading: false,\n          data,\n        });\n      })\n      .catch((error) => {\n        setState({\n          ...state,\n          loading: false,\n          error,\n        });\n      });\n  }, [trigger]);\n  if (!options.url) {\n    return;\n  }\n  return {...state, refetch};\n};\n\nconst UseAxios = () => {\n  const {loading, error, data, refetch} = useForAxios({\n    url: 'https://yts.mx/api/v2/list_movies.json',\n  });\n  console.log(\n    `loading:${loading}\\nerror : ${error}\\ndata : ${JSON.stringify(data)}`\n  );\n  return (\n    <Container>\n      <Div>\n        <h1>16. axios 가져오는지 콘솔에서 확인</h1>\n        <Icon>{data && data.status}</Icon>\n        <Icon>{loading && 'loading'}</Icon>\n        <button onClick={refetch}>refetch</button>\n      </Div>\n      <Pre>\n        {`import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport defaultAxios from 'axios';\n\nconst axios = (options, axiosInstance = defaultAxios) => {\n  const [state, setState] = useState({\n    loading: true,\n    error: null,\n    data: null,\n  });\n  const [trigger, setTrigger] = useState(0);\n    const refetch = () => {\n        setState({\n            ...state,\n            loading: true,\n        });\n        setTrigger(Date.now());\n  };\n  useEffect(() => {\n    axiosInstance(options)\n      .then((data) => {\n        setState({\n          ...state,\n          loading: false,\n          data,\n        });\n      })\n      .catch((error) => {\n        setState({\n          ...state,\n          loading: false,\n          error,\n        });\n      });\n  }, [trigger]);\n  if (!options.url) {\n    return;\n  }\n  return {...state, refetch};\n};\n\nconst UseAxios = () => {\n  const {loading, error, data, refetch} = axios({\n    url: 'https://yts.mx/api/v2/list_movies.json',\n  });\n  console.log(\n    'loading:{loading}error : {error}ndata : {JSON.stringify(data)}'\n  );\n  return (\n    <Container>\n      <div>\n      <h1>{data && data.status}</h1>\n      <h1>{loading && 'loading'}</h1>\n        <button onClick={refetch}>refetch</button>\n      </div>\n    </Container>\n  );\n};\n\nexport default UseAxios;\n`}\n      </Pre>\n    </Container>\n  );\n};\n\nexport default UseAxios;\n","import {HashRouter, Route} from 'react-router-dom';\nimport Header from './Header';\nimport UseTitle from '../Routes/UseTitle';\nimport UseTabs from '../Routes/UseTabs';\nimport UseScroll from '../Routes/useScroll';\nimport UseRef from '../Routes/UseRef';\nimport UsePreventLeave from '../Routes/UsePreventLeave';\nimport UseNotification from '../Routes/UseNotification';\nimport UseNetwork from '../Routes/UseNetwork';\nimport UseInput from '../Routes/UseInput';\nimport UseFullScreen from '../Routes/UseFullScreen';\nimport UseFadeIn from '../Routes/UseFadeIn';\nimport UseEffect from '../Routes/UseEffect';\nimport UseConfirm from '../Routes/UseConfirm';\nimport UseClick from '../Routes/UseClick';\nimport UseBeforeLeave from '../Routes/UseBeforeLeave';\nimport UseAxios from '../Routes/UseAxios';\n\nconst Router = () => {\n  return (\n    <HashRouter>\n      <Header />\n      <Route path=\"/title\" component={UseTitle} />\n      <Route path=\"/tabs\" component={UseTabs} />\n      <Route path=\"/scroll\" component={UseScroll} />\n      <Route path=\"/ref\" component={UseRef} />\n      <Route path=\"/prevent\" component={UsePreventLeave} />\n      <Route path=\"/notification\" component={UseNotification} />\n      <Route path=\"/network\" component={UseNetwork} />\n      <Route path=\"/input\" component={UseInput} />\n      <Route path=\"/full/screen\" component={UseFullScreen} />\n      <Route path=\"/fadein\" component={UseFadeIn} />\n      <Route path=\"/effect\" component={UseEffect} />\n      <Route path=\"/confirm\" component={UseConfirm} />\n      <Route path=\"/before\" component={UseBeforeLeave} />\n      <Route path=\"/axios\" component={UseAxios} />\n      <Route path=\"/click\" component={UseClick} />\n    </HashRouter>\n  );\n};\nexport default Router;\n","import React, {useState, useEffect} from 'react';\nimport Router from './Components/Router';\n\nconst App = () => {\n  return (\n    <>\n      <Router />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}